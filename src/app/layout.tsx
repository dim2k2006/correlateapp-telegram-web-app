import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import './globals.css';
import { buildConfig, buildContainer } from '@/container';
import { ParameterServiceProvider } from '@/components/parameter-service-provider';
import ConfigProvider from '@/components/config-provider';

const queryClient = new QueryClient();

const config = buildConfig();
const container = buildContainer(config);

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <QueryClientProvider client={queryClient}>
          <ConfigProvider config={config}>
            <ParameterServiceProvider service={container.parameterService}>{children}</ParameterServiceProvider>
          </ConfigProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
}
